---
import { Icon } from 'astro-icon/components';
import type { IconOptions } from './IconOptions';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'button'> {
    label?: string;
    icon?: string | IconOptions;
    standalone?: boolean;
}

const { label, icon, standalone, ...props } = Astro.props;
---

<button class:list={[ 'btn', { standalone } ]} {...props}>
    {icon && (typeof icon === 'string' ? 
        <Icon name={icon} size={32} ></Icon> :
        <Icon {...icon} ></Icon>
    )}
    <slot>{label && label}</slot>
</button>

<style>
    button {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
    }
</style>

<style is:global>
    :root {
        --button-highlight-text-color: var(--highlight-text-color);
        --button-text-color: var(--text-color);
    }

    .btn {        
        font-size: var(--default-font-size);
        
        &:hover, &.active, &:focus   {
            border: 2px solid var(--secondary-color);
            color: var(--button-highlight-text-color);
        }

        width: max-content;
        padding: 0.5rem;
        
        border: none;
        border: 2px solid var(--accent-color);
        border-radius: var(--b-radius);

        background-color: var(--primary-color);
        color: var(--button-text-color);

        cursor: pointer;
    }

    .btn.standalone {
        border: none;
        padding: 0;
        background: none;
    }
</style>