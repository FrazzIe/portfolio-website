---

import { Icon } from 'astro-icon/components'
import type { IconOptions } from './IconOptions';

export interface LinkProps extends Props {};

interface Props {
    label?: string;
    target: string;
    icon?: string | IconOptions;
    type?: 'internal' | 'external';
    btn?: boolean;
}

const { label, target, icon, type, btn } = Astro.props;

const currentPath = Astro.url.pathname;
const targetPath = target;

const pathMatches = 
    URL.canParse(targetPath) ? false :
    currentPath === targetPath ? true 
    : currentPath.startsWith(targetPath) && targetPath !==  '/';
---

<a href={target} class:list={[ { btn: btn, active: pathMatches } ]}>
    {icon && (typeof icon === 'string' ? 
        <Icon name={icon} size={32} ></Icon> :
        <Icon {...icon} ></Icon>
    )}
    <slot>{label && label}</slot>
    {type === 'external' && <Icon name="ri:external-link-line"></Icon>}
    {type === 'internal' && <Icon name="ri:links-fill" size={12}></Icon>}
</a>


<style>
    :root {
        --link-highlight-color: var(--text-color);
        --link-text-color: #d0d2d4;
    }

    a {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        color: var(--link-text-color);

        cursor: pointer;
    }

    a:hover:not(.btn), a.active { 
        color: var(--link-highlight-color); 
    }

    .btn { text-decoration: none; }
</style>