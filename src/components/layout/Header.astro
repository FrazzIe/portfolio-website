---
import Button from '@components/Button.astro';
import Link, { type LinkProps } from '@components/Link.astro';
import { Icon } from 'astro-icon/components';

interface Props {
    navItems?: LinkProps[];
}

const { navItems } = Astro.props;
---

<header>
    <div class="title">
        <slot/>
    </div>

    <div class="actions">
        <Button id="nav-btn" ariaLabel="Toggle navigation menu">
            <Icon class="nav-btn-open" name="ri:menu-fill" size={20}></Icon>
            <Icon class="nav-btn-close" name="ri:close-fill" size={20}></Icon>
        </Button>
    </div>

    <nav id="nav-content">
        {navItems?.map(item => <Link {...item}></Link>)}
    </nav>
</header>

<script>
    const navBtn = document.getElementById('nav-btn');
    const navContent = document.getElementById('nav-content');

    navBtn?.addEventListener('click', _ => navContent?.classList.toggle('expanded'));
</script>

<style>
    header {
        display: grid;
        grid-template-columns: 0fr 1fr 0fr;
        grid-template-rows: 1fr;
        grid-template-areas: "title nav actions";

        gap: 0.5rem 2rem;
        padding: 0.5rem 0;

        align-items: center;
        border-bottom: 1px solid var(--primary-color);
    } 

    .title {
        grid-area: title;
        font-size: 2.5rem;
        margin-right: auto;
        color: var(--primary-color);

        margin-left: 1rem;
    }

    .actions {
        display: flex;
        gap: 1rem;

        grid-area: actions;

        justify-self: right;
        align-items: center;
        margin-right: 1rem;

        #nav-btn { display: none; }
    }

    .nav-btn-close { display: none; }

    nav {
        grid-area: nav;

        display: flex;
        gap: 1.5rem;

        a {
            text-decoration: none;
            font-weight: 500;

            --link-highlight-color: rgba(var(--white-color-rgb), 0.7);
        }
    }

    @media only screen and (max-width: 768px) {
        header {
            grid-template-areas: 
                "title actions actions"
                "nav nav nav";
        
            padding-bottom: 0;

            &:has(nav.expanded) { 
                border-bottom: none;
                padding-bottom: 0;

                .nav-btn-close { display: block !important; }
                .nav-btn-open { display: none; }
            }
        }        

        .actions { 
            grid-column: span 2;
            #nav-btn { display: inline-flex; }
        }

        nav {
            max-height: 0;
            transition: max-height 0.25s ease-out;

            background-color: var(--secondary-color);

            overflow: hidden;
            flex-direction: column;
            gap: 0;

            &.expanded {               
                max-height: 100vh; 
                transition: max-height 0.35s ease-in;

                border-bottom: 1px solid var(--primary-color);
            }

            a { 
                padding: 1rem;
                &:first-child { border-top: 1px solid var(--primary-color); }
            }

            button { margin: 1rem; }
        }
    }
</style>